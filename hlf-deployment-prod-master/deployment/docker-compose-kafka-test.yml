
version: '2'

services:

    ca.org1.example.com:
        image: hyperledger/fabric-ca:1.2.0 
        environment:
            - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
            - FABRIC_CA_SERVER_CA_NAME=ca.org1.example.com
            - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org1.example.com-cert.pem
            - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/b8adaade7f30ad94579f786bf8875c28f5e9f1b8f1ce2f8ab5c3a8aaf8f3098e_sk
        ports:
            - "7054:7054"
        command: sh -c 'fabric-ca-server start -b admin:adminpw -d --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.org1.example.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/b8adaade7f30ad94579f786bf8875c28f5e9f1b8f1ce2f8ab5c3a8aaf8f3098e_sk'
        volumes:
            - ../crypto-config/peerOrganizations/org1.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
        container_name: ca.org1.example.com

    ca.org2.example.com:
      image: hyperledger/fabric-ca:1.2.0
      environment:
        - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
        - FABRIC_CA_SERVER_CA_NAME=ca.org2.example.com
        - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org2.example.com-cert.pem
        - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/24f0b54143aecec9ee07d25473a709b98cedbbf79849e8f0eb6cb3ae83b27b79_sk
      ports:
        - "8054:7054"
      command: sh -c 'fabric-ca-server start -b admin:adminpw -d --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.org2.example.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/24f0b54143aecec9ee07d25473a709b98cedbbf79849e8f0eb6cb3ae83b27b79_sk'
      volumes:
        - ../crypto-config/peerOrganizations/org2.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
      container_name: ca.org2.example.com




    zookeeper0:
      container_name: zookeeper0
      hostname: zookeeper0
      image: hyperledger/fabric-zookeeper
      restart: always
      environment:
        - ZOO_MY_ID=1
        - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
      ports:
        - 2181:2181
        - 2888:2888
        - 3888:3888

    zookeeper1:
      container_name: zookeeper1
      hostname: zookeeper1
      image: hyperledger/fabric-zookeeper
      restart: always
      environment:
        - ZOO_MY_ID=2
        - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
      ports:
        - 12181:2181
        - 12888:2888
        - 13888:3888

    zookeeper2:
      container_name: zookeeper2
      hostname: zookeeper2
      image: hyperledger/fabric-zookeeper
      restart: always
      environment:
        - ZOO_MY_ID=3
        - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
      ports:
        - 22181:2181
        - 22888:2888
        - 23888:3888

    kafka0:
      container_name: kafka0
      hostname: kafka0
      image: hyperledger/fabric-kafka
      restart: always
      environment:
        - KAFKA_MESSAGE_MAX_BYTES=103809024 # 99 * 1024 * 1024 B
        - KAFKA_REPLICA_FETCH_MAX_BYTES=103809024 # 99 * 1024 * 1024 B
        - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
      environment:
        - KAFKA_BROKER_ID=1
        - KAFKA_MIN_INSYNC_REPLICAS=2
        - KAFKA_DEFAULT_REPLICATION_FACTOR=3
        - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
      ports:
        - 9092:9092
      depends_on:
        - zookeeper0
        - zookeeper1
        - zookeeper2

    kafka1:
      container_name: kafka1
      hostname: kafka1
      image: hyperledger/fabric-kafka
      restart: always
      environment:
        - KAFKA_MESSAGE_MAX_BYTES=103809024 # 99 * 1024 * 1024 B
        - KAFKA_REPLICA_FETCH_MAX_BYTES=103809024 # 99 * 1024 * 1024 B
        - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
      environment:
        - KAFKA_BROKER_ID=2
        - KAFKA_MIN_INSYNC_REPLICAS=2
        - KAFKA_DEFAULT_REPLICATION_FACTOR=3
        - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
      ports:
        - 19092:9092
      depends_on:
        - zookeeper0
        - zookeeper1
        - zookeeper2


    kafka2:
      container_name: kafka2
      hostname: kafka2
      image: hyperledger/fabric-kafka
      restart: always
      environment:
        - KAFKA_MESSAGE_MAX_BYTES=103809024 # 99 * 1024 * 1024 B
        - KAFKA_REPLICA_FETCH_MAX_BYTES=103809024 # 99 * 1024 * 1024 B
        - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
      environment:
        - KAFKA_BROKER_ID=3
        - KAFKA_MIN_INSYNC_REPLICAS=2
        - KAFKA_DEFAULT_REPLICATION_FACTOR=3
        - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
      ports:
        - 29092:9092
      depends_on:
        - zookeeper0
        - zookeeper1
        - zookeeper2


 

    kafka3:
      container_name: kafka3
      hostname: kafka3
      image: hyperledger/fabric-kafka
      restart: always
      environment:
        - KAFKA_MESSAGE_MAX_BYTES=103809024 # 99 * 1024 * 1024 B
        - KAFKA_REPLICA_FETCH_MAX_BYTES=103809024 # 99 * 1024 * 1024 B
        - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
      environment:
        - KAFKA_BROKER_ID=4
        - KAFKA_MIN_INSYNC_REPLICAS=2
        - KAFKA_DEFAULT_REPLICATION_FACTOR=3
        - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
      ports:
        - 39092:9092
      depends_on:
        - zookeeper0
        - zookeeper1
        - zookeeper2


    orderer0.example.com:
        container_name: orderer0.example.com
        image: hyperledger/fabric-orderer:1.2.0
        environment:
          - ORDERER_GENERAL_LOGLEVEL=info
          - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
          - ORDERER_GENERAL_GENESISMETHOD=file
          - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
          - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
          - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
          # enabled TLS
          #- ORDERER_GENERAL_TLS_ENABLED=true
          #- ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
          #- ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
          #- ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
          - ORDERER_KAFKA_RETRY_LONGINTERVAL=10s 
          - ORDERER_KAFKA_RETRY_LONGTOTAL=100s
          - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
          - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
          - ORDERER_KAFKA_VERBOSE=true
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric
        command: orderer
        volumes:
            - ../channel-artifacts/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0.example.com/msp:/var/hyperledger/orderer/msp
        depends_on:
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        ports:
          - 7050:7050


    orderer1.example.com:
        container_name: orderer1.example.com
        image: hyperledger/fabric-orderer:1.2.0
        environment:
          - ORDERER_GENERAL_LOGLEVEL=info
          - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
          - ORDERER_GENERAL_GENESISMETHOD=file
          - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
          - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
          - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
          # enabled TLS
          #- ORDERER_GENERAL_TLS_ENABLED=true
          #- ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
          #- ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
          #- ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
          - ORDERER_KAFKA_RETRY_LONGINTERVAL=10s 
          - ORDERER_KAFKA_RETRY_LONGTOTAL=100s
          - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
          - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
          - ORDERER_KAFKA_VERBOSE=true
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric
        command: orderer
        volumes:
            - ../channel-artifacts/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0.example.com/msp:/var/hyperledger/orderer/msp
        depends_on:
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        ports:
          - 8050:7050

    orderer2.example.com:
        container_name: orderer2.example.com
        image: hyperledger/fabric-orderer:1.2.0
        environment:
          - ORDERER_GENERAL_LOGLEVEL=info
          - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
          - ORDERER_GENERAL_GENESISMETHOD=file
          - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
          - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
          - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
          # enabled TLS
          #- ORDERER_GENERAL_TLS_ENABLED=true
          #- ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
          #- ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
          #- ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
          - ORDERER_KAFKA_RETRY_LONGINTERVAL=10s 
          - ORDERER_KAFKA_RETRY_LONGTOTAL=100s
          - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
          - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
          - ORDERER_KAFKA_VERBOSE=true
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric
        command: orderer
        volumes:
            - ../channel-artifacts/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0.example.com/msp:/var/hyperledger/orderer/msp
        depends_on:
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        ports:
          - 9050:7050


    peer0.org1.example.com:
        container_name: peer0.org1.example.com
        hostname: peer0.org1.example.com
        image: hyperledger/fabric-peer:1.2.0
        environment:
            #new add
           - CORE_LOGGING_PEER=debug
           - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
           - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
           - CORE_PEER_ID=peer0.org1.example.com
           - CORE_PEER_ENDORSER_ENABLED=true
           - CORE_PEER_LOCALMSPID=Org1MSP
           - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
           - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
           - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.org1.example.com:7051
           - CORE_PEER_GOSSIP_USELEADERELECTION=true
           - CORE_PEER_GOSSIP_ORGLEADER=false
           - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org1.example.com:7051
           - CORE_PEER_ADDRESSAUTODETECT=true
           - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=deployment_default
           - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
           - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb.peer0.org1.example.com:5984
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
        command: peer node start
        volumes:
           - /var/run/:/host/var/run/
           - ../crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp:/etc/hyperledger/fabric/msp
        ports:
          - 7051:7051
          - 7052:7052
          - 7053:7053
        depends_on:
            - orderer0.example.com
            - orderer1.example.com
            - orderer2.example.com

    couchdb.peer0.org1.example.com:
        container_name: couchdb.peer0.org1.example.com
        image: hyperledger/fabric-couchdb:0.4.10
        ports:
          - 5984:5984
        environment:
          DB_URL: http://localhost:5984/member_db


    cli:
        container_name: cli
        image: hyperledger/fabric-tools:1.2.0
        tty: true
        environment:
         - GOPATH=/opt/gopath
         - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
         # - CORE_LOGGING_LEVEL=ERROR
         - CORE_LOGGING_LEVEL=INFO
         - CORE_PEER_ID=cli
         #- CORE_PEER_ADDRESS=peer0.org1.example.com:7051
         #- CORE_PEER_LOCALMSPID=Org1MSP
         #- CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
        volumes:
           - /var/run/:/host/var/run/
           - ../chaincode:/opt/gopath/src/github.com/hyperledger/fabric/kafkapeer/chaincode/go
           - ../crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
           - ../channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
        depends_on:
            - peer0.org1.example.com
            - peer1.org1.example.com
            - peer0.org2.example.com
            - peer1.org2.example.com
            - orderer0.example.com
            - orderer1.example.com
            - orderer2.example.com

    peer1.org1.example.com:
        container_name: peer1.org1.example.com
        hostname: peer1.org1.example.com
        image: hyperledger/fabric-peer:1.2.0
        environment:
            #new add
           - CORE_LOGGING_PEER=debug
           - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
           - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
           - CORE_PEER_ID=peer1.org1.example.com
           - CORE_PEER_ENDORSER_ENABLED=true
           - CORE_PEER_LOCALMSPID=Org1MSP
           - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
           - CORE_PEER_ADDRESS=peer1.org1.example.com:7051
           - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.org1.example.com:7051
           - CORE_PEER_GOSSIP_USELEADERELECTION=true
           - CORE_PEER_GOSSIP_ORGLEADER=false
           - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.org1.example.com:7051
           - CORE_PEER_ADDRESSAUTODETECT=true
           - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=deployment_default
           - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
           - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb.peer1.org1.example.com:5984           
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
        command: peer node start
        volumes:
           - /var/run/:/host/var/run/
           - ../crypto-config/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/msp:/etc/hyperledger/fabric/msp
        ports:
          - 8051:7051
          - 8052:7052
          - 8053:7053
        depends_on:
            - orderer0.example.com
            - orderer1.example.com
            - orderer2.example.com

    couchdb.peer1.org1.example.com:
        container_name: couchdb.peer1.org1.example.com
        image: hyperledger/fabric-couchdb:0.4.10
        ports:
          - 6984:5984
        environment:
          DB_URL: http://localhost:5984/member_db




    peer0.org2.example.com:
        container_name: peer0.org2.example.com
        hostname: peer0.org2.example.com
        image: hyperledger/fabric-peer:1.2.0
        environment:
            #new add
           - CORE_LOGGING_PEER=debug
           - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
           - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
           - CORE_PEER_ID=peer0.org2.example.com
           - CORE_PEER_ENDORSER_ENABLED=true
           - CORE_PEER_LOCALMSPID=Org2MSP
           - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
           - CORE_PEER_ADDRESS=peer0.org2.example.com:7051
           - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org2.example.com:7051
           - CORE_PEER_GOSSIP_USELEADERELECTION=true
           - CORE_PEER_GOSSIP_ORGLEADER=false
           - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org2.example.com:7051
           - CORE_PEER_ADDRESSAUTODETECT=true
           - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=deployment_default
           - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
           - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb.peer0.org2.example.com:5984
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
        command: peer node start
        volumes:
           - /var/run/:/host/var/run/
           - ../crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/msp:/etc/hyperledger/fabric/msp
        ports:
          - 9051:7051
          - 9052:7052
          - 9053:7053
        depends_on:
            - orderer0.example.com
            - orderer1.example.com
            - orderer2.example.com

    couchdb.peer0.org2.example.com:
        container_name: couchdb.peer0.org2.example.com
        image: hyperledger/fabric-couchdb:0.4.10
        ports:
          - 7984:5984
        environment:
          DB_URL: http://localhost:5984/member_db



    peer1.org2.example.com:
        container_name: peer1.org2.example.com
        hostname: peer1.org2.example.com
        image: hyperledger/fabric-peer:1.2.0
        environment:
            #new add
           - CORE_LOGGING_PEER=debug
           - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
           - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
           - CORE_PEER_ID=peer1.org2.example.com
           - CORE_PEER_ENDORSER_ENABLED=true
           - CORE_PEER_LOCALMSPID=Org2MSP
           - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
           - CORE_PEER_ADDRESS=peer1.org2.example.com:7051
           - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.org2.example.com:7051
           - CORE_PEER_GOSSIP_USELEADERELECTION=true
           - CORE_PEER_GOSSIP_ORGLEADER=false
           - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.org2.example.com:7051
           - CORE_PEER_ADDRESSAUTODETECT=true
           - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=deployment_default
           - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
           - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb.peer1.org2.example.com:5984
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
        command: peer node start
        volumes:
           - /var/run/:/host/var/run/
           - ../crypto-config/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/msp:/etc/hyperledger/fabric/msp
        ports:
          - 10051:7051
          - 10052:7052
          - 10053:7053
        depends_on:
            - orderer0.example.com
            - orderer1.example.com
            - orderer2.example.com


    couchdb.peer1.org2.example.com:
        container_name: couchdb.peer1.org2.example.com
        image: hyperledger/fabric-couchdb:0.4.10
        ports:
          - 8984:5984
        environment:
          DB_URL: http://localhost:5984/member_db













